{"version":3,"sources":["Components/Utils/Common.js","Components/Todo/TodoForm.js","Components/Todo/Todo.js","Components/Todo/Todolist.js","Components/Login/Login.js","Components/Utils/PublicRoute.js","Components/Utils/PrivateRoute.js","App.js","index.js"],"names":["getToken","sessionStorage","getItem","setUserSession","token","user","setItem","JSON","stringify","removeUserSession","removeItem","TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","event","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","Todolist","userStr","parse","getUser","setTodos","history","push","username","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","Login","setUsername","password","setPassword","error","setError","loading","setLoading","for","data-type","disabled","axios","post","then","response","data","console","log","catch","status","message","PublicRoute","Component","component","rest","render","to","pathname","PrivateRoute","state","from","location","App","authLoading","setAuthLoading","get","exact","activeClassName","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b596575.chunk.js","sourcesContent":["// Create Common Utils\r\nexport const getUser = () => {\r\n const userStr = sessionStorage.getItem(\"user\");\r\n if(userStr) return JSON.parse(userStr);\r\n else return null;\r\n}\r\nexport const getToken = () => {\r\n    return sessionStorage.getItem(\"token\") || null;\r\n}\r\nexport const setUserSession = (token,user) => {\r\n   sessionStorage.setItem(\"token\",token);\r\n   sessionStorage.setItem(\"user\",JSON.stringify(user));\r\n\r\n}\r\nexport const removeUserSession = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"user\");\r\n\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n    useEffect(()=> {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input,\r\n        });\r\n        setInput('')\r\n    };\r\n    return (\r\n        \r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                {props.edit ? (  <>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"todo-input\"\r\n                    placeholder=\"Add a todo\"\r\n                    value={input}\r\n                    name=\"text\"\r\n                    onChange={handleChange} ref={inputRef} />\r\n                <button className=\"todo-button\">Update</button>\r\n                </>\r\n                ) :\r\n                (   <>\r\n                <input\r\n                type=\"text\"\r\n                className=\"todo-input\"\r\n                placeholder=\"Add a todo\"\r\n                value={input}\r\n                name=\"text\"\r\n                onChange={handleChange} ref={inputRef} /> \r\n                <button className=\"todo-button\">Add todo</button> \r\n                </>\r\n            ) }\r\n\r\n            </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: \"\",\r\n    });\r\n\r\n    const submitUpdate = (value) => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: \"\",\r\n        });\r\n    };\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete-icons\"\r\n                />\r\n                <TiEdit\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className=\"edit-icons\"\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport { getUser, removeUserSession } from \"../Utils/Common\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\nimport \"./Todo.css\";\r\n\r\nconst Todolist = (props) => {\r\n    const user = getUser();\r\n    // console.log(user);\r\n\r\n    // Manage logout to login\r\n    const handleLogout = () => {\r\n        removeUserSession();\r\n        props.history.push(\"/\");\r\n    };\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const addTodo = (todo) => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    };\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n        setTodos((prev) => prev.map((item) => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = (id) => {\r\n        const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n        setTodos(removeArr);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className=\"todo-button todo-login\"\r\n                type=\"button\"\r\n                value=\"Logout\"\r\n                onClick={handleLogout}\r\n            />\r\n\r\n            <div className=\"todo-app\">\r\n                <h1>{user.username}..Welcome to Todo List !! </h1>\r\n                <TodoForm onSubmit={addTodo} />\r\n                <Todo\r\n                    todos={todos}\r\n                    completeTodo={completeTodo}\r\n                    removeTodo={removeTodo}\r\n                    updateTodo={updateTodo}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Todolist;\r\n","import React,{useState} from \"react\";\r\nimport  \"./Login.css\";\r\nimport axios from \"axios\";\r\nimport { setUserSession } from \"../Utils/Common\";\r\n\r\nconst Login = (props) => {\r\n\r\n const [username,setUsername] = useState('');\r\n const [password,setPassword] = useState('');\r\n const [error,setError] = useState(null);\r\n const [loading,setLoading] = useState(false);\r\n\r\n   const handleLogin = () => {\r\n       setError(null);\r\n       setLoading(true);\r\n       // Integrate signin API\r\n       axios.post(\"http://localhost:4000/users/signin\",{\r\n           username: username,\r\n        password: password\r\n       }).then(response =>{\r\n\r\n        setLoading(false);\r\n        setUserSession(response.data.token, response.data.user)\r\n        props.history.push('/todo');\r\n        console.log(\"response >> \",response);\r\n       }).catch(error => {\r\n        setLoading(false);\r\n        if(error.response.status ===401 || error.response.status === 400){\r\n            setError(error.response.data.message);\r\n        }else{\r\n            setError(\"Something went wrong. Please try again later!!\")\r\n        }\r\n        console.log(\"error >> \",error);\r\n\r\n       });\r\n   } \r\n    return(\r\n        <div> \r\n          <div className=\"login-wrap\">\r\n\t<div className=\"login-html\">\r\n\t\t<label for=\"tab-1\" className=\"tab\">Sign In</label>\r\n\t\t<div className=\"login-form\">\r\n\t\t\t<div className=\"sign-in-htm\">\r\n\t\t\t\t<div className=\"group\">\r\n\t\t\t\t\t<label for=\"user\" className=\"label\">Username</label>\r\n\t\t\t\t\t<input value={username} onChange={event => setUsername(event.target.value)} id=\"user\" type=\"text\" className=\"input\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"group\">\r\n\t\t\t\t\t<label for=\"pass\" className=\"label\"  >Password</label>\r\n\t\t\t\t\t<input value={password} onChange={event => setPassword(event.target.value)} id=\"pass\" type=\"password\" className=\"input\" data-type=\"password\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{error && <div className=\"error\">{error}</div>}\r\n\t\t\t\t<div className=\"group\">\r\n\t\t\t\t\t<input type=\"button\" className=\"button\" value={loading ? \"loading..\" : \"Login\"} disabled={loading} onClick={handleLogin}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { getToken } from \"./Common\";\r\n\r\nconst PublicRoute = ({component : Component, ...rest}) => {\r\n    return (\r\n        <Route \r\n        {...rest}\r\n        render = {props => {\r\n            return !getToken() ? <Component {...props}/>\r\n            : <Redirect to={{pathname:\"/todo\"}} />\r\n        }}\r\n        />\r\n    )\r\n}\r\nexport default PublicRoute;","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { getToken } from \"./Common\";\r\n\r\nconst PrivateRoute = ({component : Component, ...rest}) => {\r\n    return (\r\n        <Route \r\n        {...rest}\r\n        render = {props => {\r\n            return getToken() ? <Component {...props}/>\r\n            : <Redirect to={{pathname:\"/\",state: {from:props.location} }} />\r\n        }} \r\n        />\r\n    )\r\n}\r\nexport default PrivateRoute;","import React, { useState , useEffect } from \"react\";\nimport { BrowserRouter, Switch, NavLink } from \"react-router-dom\";\nimport Todolist from \"./Components/Todo/Todolist\";\nimport Login from \"./Components/Login/Login\";\n\nimport PublicRoute from \"./Components/Utils/PublicRoute\";\nimport PrivateRoute from \"./Components/Utils/PrivateRoute\";\nimport { getToken, removeUserSession, setUserSession } from \"./Components/Utils/Common\";\nimport axios from \"axios\";\n\nfunction App() {\n\n    const [authLoading, setAuthLoading] = useState(true);\n\nuseEffect(() => {\n  const token = getToken();\n  if(!token){\n      return;\n  }\naxios.get(`http://localhost:4000/verifyToken?token=${token}`).then(response => {\nsetUserSession(response.data.token,response.data.user);\nsetAuthLoading(false);\n}).catch(error => {\n    removeUserSession();\n    setAuthLoading(false);\n});\n\n}, []);\n\nif(authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentiction...</div>\n}\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <div className=\"header\">\n                <div className=\"header-sub\">\n                    <NavLink exact activeClassName=\"active\" to=\"/\">\n                        Login\n                    </NavLink>\n                    <NavLink activeClassName=\"active\" to=\"/todo\">\n                        TodoList\n                    </NavLink>\n                </div> \n                </div>\n                <div className=\"content\">\n                    <Switch>\n                        {/* Created public and private routes */}\n                      <PublicRoute exact path=\"/\" component={Login} />\n                      <PrivateRoute path=\"/todo\" component={Todolist} />\n\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}